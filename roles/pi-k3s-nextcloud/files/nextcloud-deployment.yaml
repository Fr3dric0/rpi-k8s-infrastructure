kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  namespace: {{ nextcloud_k3s_namespace }}
  labels:
    app: postgres-pv-claim
    app.kubernetes.io/name: nextcloud-postgres-volume-claim
    app.kubernetes.io/component: volume
    app.kubernetes.io/part-of: nextcloud
    app.kubernetes.io/managed-by: 'ansible'
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud-postgres
  namespace: {{ nextcloud_k3s_namespace }}
  labels:
    app: nextcloud-postgres
    app.kubernetes.io/name: nextcloud-postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: nextcloud
    app.kubernetes.io/managed-by: 'ansible'
    app.kubernetes.io/version: '{{ nextcloud_postgres_version }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nextcloud-postgres
    spec:
      # securityContext:
      #   runAsUser: 13000
      #   runAsGroup: 2000
      #   fsGroup: 2000
      containers:
      - name: postgres
        image: arm32v7/postgres:{{ nextcloud_postgres_version }}
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: POSTGRES_USER
                name: {{ nextcloud_k3s_secret_name }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: {{ nextcloud_k3s_secret_name }}
          - name: POSTGRES_DB
            value: {{ nextcloud_database_name }}
        ports:
          - containerPort: 5432
            name: postgredb
        resources:
          requests:
            cpu: '5m'
            memory: 256M
          limits:
            cpu: '200m'
            memory: 1Gi    
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgredb-volume
        # securityContext:
        #   allowPrivilegeEscalation: false
      volumes:
        - name: postgredb-volume
          persistentVolumeClaim:
            claimName: postgres-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud-postgres
  namespace: {{ nextcloud_k3s_namespace }}
  labels:
    app: nextcloud-postgres
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: nextcloud
    app.kubernetes.io/managed-by: 'ansible'
spec:
  ports:
  - port: 5432
    name: postgres
  selector:
    app: nextcloud-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-data-pvc
  namespace: {{ nextcloud_k3s_namespace }}
  labels:
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: nextcloud
    app.kubernetes.io/managed-by: 'ansible'
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: {{ nextcloud_k3s_namespace }}
  labels:
    app: nextcloud
    app.kubernetes.io/name: nextcloud
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: nextcloud
    app.kubernetes.io/managed-by: 'ansible'
    app.kubernetes.io/version: '{{ nextcloud_version }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      # securityContext:
      #   runAsUser: 3000
      #   runAsGroup: 3000
      #   fsGroup: 3000
      containers:
        - image: arm32v7/nextcloud:{{ nextcloud_version }}
          name: nextcloud
          ports:
          - containerPort: 80
            name: nextcloudhttp
          env:
            - name: SQLITE_DATABASE
              value: {{ nextcloud_database_name }}
            # - name: POSTGRES_DB
            #   value: {{ nextcloud_database_name }}
            # - name: POSTGRES_USER
            #   valueFrom:
            #     secretKeyRef:
            #       key: POSTGRES_USER
            #       name: {{ nextcloud_k3s_secret_name }}
            # - name: POSTGRES_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       key: POSTGRES_PASSWORD
            #       name: {{ nextcloud_k3s_secret_name }}
            # - name: POSTGRES_HOST
            #   value: nextcloud-postgres
            
            - name: NEXTCLOUD_TRUSTED_DOMAINS
              value: '{{ nextcloud_domain }}'
            - name: NEXTCLOUD_ADMIN_USER
              valueFrom:
                secretKeyRef:
                    key: NEXTCLOUD_ADMIN_USER
                    name: {{ nextcloud_k3s_secret_name }}
            - name: NEXTCLOUD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                    key: NEXTCLOUD_ADMIN_PASSWORD
                    name: {{ nextcloud_k3s_secret_name }}
          resources:
            requests:
              memory: 256M
            limits:
              memory: 1Gi
          volumeMounts:
            - mountPath: /var/www/html/data
              name: nextcloud-data-volume
          securityContext:
            privileged: true
            # runAsGroup: 3000
            # runAsUser: 3000
            #   allowPrivilegeEscalation: false
            #   capabilities:
            #     add:
            #       - NET_BIND_SERVICE
      volumes:
        - name: nextcloud-data-volume
          persistentVolumeClaim:
            claimName: nextcloud-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud-svc
  namespace: {{ nextcloud_k3s_namespace }}
  labels:
    app: nextcloud-svc
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: nextcloud
    app.kubernetes.io/managed-by: 'ansible'
spec:
  ports:
  - port: 80
    name: nextcloudhttp
  selector:
    app: nextcloud
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nextcloud-ingress
  namespace: {{ nextcloud_k3s_namespace }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
    - hosts:
        - {{ nextcloud_domain }}
      secretName: tls-secret
  rules:
    - host: {{ nextcloud_domain }}
      http:
        paths:
          - path: /
            backend:
              serviceName: nextcloud-svc
              servicePort: 80
